{"version":3,"sources":["components/formconfig.js","logic/stampduty/stampduty-bands.js","components/StatelessFormComponents.js","components/FormComponent.js","components/ResultListComponent.js","logic/stampduty/stampduty-calculator.js","labels/calculations-labels.js","logic/calculations.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","label","name","type","defVal","options","value","commercial","upto","rate","residential","Label","_ref3","doLabelClass","dynamicLabel","react_default","a","createElement","className","htmlFor","StatelessComponents","Input","_ref","onInput","placeholder","onblur","key","id","onChange","ev","autoComplete","concat","defaultValue","onBlur","e","Select","_ref2","disabled","map","opt","FormColumn","render","fields","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderFields","formFields","forEach","ob","n","l","doLabel","handleChange","target","push","renderFieldCols","arrLength","Math","floor","length","left","slice","right","splice","FormComponent_FormColumn","t","val","newFormData","newValObject","isNaN","parseFloat","checked","assign","state","formData","setState","test","calculate","v","fname","fData","defValues","prevProps","prevState","snapshot","projName","document","getElementById","text","replace","Component","ListItem","ResultList","data","ind","ResultListComponent_ListItem","calculateStampDuty","sdltType","bandLimit","previousBandLimit","onePercentOfVal","round","load","bands","sdltBands","tax","idx","console","error","calculations_labels","allInputCosts","initSurveyorsFee","initLegalFee","initMortgageFee","refurbCost","otherCost","propertyValue","stampDutyType","calculations","freeCash","loanToValue","buyingCash","doneUpValue","mortgageInterestRatePercent","monthlyRent","moePercent","agentsPercent","remortgageFee","remortgageValuationFee","remortgageLegalFee","repairingLease","loanToVal","remortgageAdvance","remortgageDeposit","remortgageMonthlyInterest","moe","lettingAgentsFees","freeCashFlowMonthly","remortgageFees","initialCost","col","labels","calculationsLabels","toFixed","colour","initialFinance","initialLoanToValue","isCash","initMortgageAdvance","initFees","other","initialDeposit","sdltTotal","totCost","totIn","flip","sellingLegalFee","agentSellingFee","fees","flipGain","stressTest","_ref4","mortgageStressInterestRatePercent","mortgageStressMultipePercent","minRent","ceil","pass","App","inputData","log","dfResult","btlResult","stress","dealFinance","buyToLet","doResults","Fragment","ResultListComponent","FormComponent","twocols","Boolean","window","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff3e5a50.chunk.js","sourcesContent":["const fields = [\n  {\n    label: 'Project name',\n    name: 'projectName',\n    type: 'text',\n  },\n  {\n    label: 'Purchase price(£)',\n    name: 'propertyValue',\n    type: 'number',\n    defVal: 0\n  },\n  {\n    label: 'Done up value(£)',\n    name: 'doneUpValue',\n    type: 'number',\n    defVal: 0\n  },\n  {\n    label: 'Monthly rent(£)',\n    name: 'monthlyRent',\n    type: 'number',\n    defVal: 0\n  },\n  {\n    label: 'Initial LTV(%)',\n    name: 'initialLoanToValue',\n    type: 'number',\n    defVal: 75\n  },\n  {\n    label: 'Cash purchase',\n    name: 'buyingCash',\n    type: 'checkbox',\n    defVal: 'no'\n  },\n  {\n    label: 'Surveyors fee(£)',\n    name: 'initSurveyorsFee',\n    type: 'number',\n    defVal: 600\n  },\n  {\n    label: 'Mortgage fee(£)',\n    name: 'initMortgageFee',\n    type: 'number',\n    defVal: 0\n  },\n  {\n    label: 'Solicitors fee(£)',\n    name: 'initLegalFee',\n    type: 'number',\n    defVal: 1500\n  },\n  {\n    label: 'Stamp duty',\n    name: 'stampDutyType',\n    type: 'select',\n    options: [\n      {value: 'residential', name: 'Residential'},\n      {value: 'commercial', name: 'Commercial'}\n      ],\n    defVal: 'residential'\n  },\n  {\n    label: 'Refurbishment cost(£)',\n    name: 'refurbCost',\n    type: 'number',\n    defVal: 0\n  },\n  {\n    label: 'Other cost(£)',\n    name: 'otherCost',\n    type: 'number',\n    defVal: 0\n  },\n  {\n    label: 'Remortgage fee(£)',\n    name: 'remortgageFee',\n    type: 'number',\n    defVal: 0\n  },\n  {\n    label: 'Remortgage valuation fee(£)',\n    name: 'remortgageValuationFee',\n    type: 'number',\n    defVal: 0\n  },\n  {\n    label: 'Remortgage solicitors fee(£)',\n    name: 'remortgageLegalFee',\n    type: 'number',\n    defVal: 0\n  },\n  {\n    label: 'Letting agents rate(%)',\n    name: 'agentsPercent',\n    type: 'number',\n    defVal: 10\n  },\n  {\n    label: 'MOE rate(%)',\n    name: 'moePercent',\n    type: 'number',\n    defVal: 15\n  },\n  {\n    label: 'Repairing lease',\n    name: 'repairingLease',\n    type: 'checkbox',\n    defVal: 'no'\n  },\n  {\n    label: 'Interest rate(%)',\n    name: 'mortgageInterestRatePercent',\n    type: 'number',\n    defVal: 6.0\n  },\n  {\n    label: 'Remortgage LTV(%)',\n    name: 'loanToValue',\n    type: 'number',\n    defVal: 75\n  },\n\n  {\n    label: 'Solicitors selling fee(£)',\n    name: 'sellingLegalFee',\n    type: 'number',\n    defVal: 0\n  },\n  {\n    label: 'Agent/selling fee(£)',\n    name: 'agentSellingFee',\n    type: 'number',\n    defVal: 0\n  },\n  {\n    label: 'Mortgage stress test(%)',\n    name: 'mortgageStressMultipePercent',\n    type: 'number',\n    defVal: 125\n  },\n  {\n    label: 'Stress interest rate(%)',\n    name: 'mortgageStressInterestRatePercent',\n    type: 'number',\n    defVal: 5.0\n  }\n\n];\n\nmodule.exports = fields;","const bands = {\n\n  commercial: [\n    {\n      upto: 150000,\n      rate: 0\n    },\n    {\n      upto: 250000,\n      rate: 2\n    },\n    {\n      upto: 'end',\n      rate: 5\n    }\n  ],\n\n  residential:[\n    {\n     upto: 125000,\n     rate: 0\n    },\n    {\n     upto: 250000,\n     rate: 2\n    },\n    {\n      upto: 925000,\n      rate: 5\n    },\n    {\n      upto: 1500000,\n      rate: 10\n    },\n    {\n      upto: 'end',\n      rate: 12\n    }\n  ]\n};\n\nmodule.exports = bands;","//stateless component Input. Currently handles types text, number, checkbox\n// passed through props\nimport React from \"react\";\n\nconst Input = ({className, name, type, onInput,\n                 placeholder, label, defVal, onblur, doLabelClass, dynamicLabel}) => {\n\n  return (\n    <li key={name}>\n      <input\n        className={className || 'form-control'}\n        key={name}\n        type={type}\n        name={name}\n        id={name}\n        onChange={(ev) => onInput(ev)}\n        autoComplete={'off'}\n        placeholder={placeholder || label || `${name} [${type}]`}\n        defaultValue={defVal || ''}\n        onBlur={(e)=>onblur(e)}\n      />\n      {Label({name, doLabelClass, dynamicLabel, label, type})}\n    </li>\n  )\n};\n\n//stateless component Select\nconst Select = ({className, name, type, onInput,\n                  placeholder, label, defVal, onblur, options, doLabelClass, dynamicLabel}) => {\n  return (\n    <li key={name}>\n      <select\n        //defaultValue={defVal}\n        className={className || 'form-control'}\n        key={name}\n        name={name}\n        id={name}\n        onChange={(ev) => onInput(ev)}\n        onBlur={(e)=>onblur(e)}\n        //placeholder={placeholder || label || name}\n      >\n        <option value=\"\" disabled>{placeholder || label || name}</option>\n        {options.map(\n          opt =>\n            <option\n              key={opt.value}\n              name={opt.name}\n              value={opt.value}>{opt.name}\n            </option>\n        )}\n      </select>\n      {Label({name, doLabelClass, dynamicLabel, label, type})}\n    </li>\n  )\n};\n\n//stateless component Label\nconst Label = ({name, doLabelClass, dynamicLabel, label, type}) => {\n  return (\n    <div className={type === 'checkbox' ? 'checkbox-label' : 'input-label'} >\n      <label\n        htmlFor={name}\n        className={doLabelClass(name)}>\n        {dynamicLabel(name, label)}\n      </label>\n    </div>\n  )\n};\n\nconst StatelessComponents = {\n  Input,\n  Select\n};\n\nexport default StatelessComponents;","import React, { Component } from 'react';\nimport StatelessComponents from './StatelessFormComponents';\n\nconst {Input, Select} = StatelessComponents;\n\nconst FormColumn = ({render, fields, className}) => {\n  return (\n    <ul className={className}>\n      {render(fields)}\n    </ul>\n  )\n};\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: props.fields,\n    };\n  }\n\n  defValues () {\n    let v = {};\n    this.props.fields.map(ob => {\n      v[ob.name] = ob.defVal;\n      return false;\n    });\n    return {formData: v};\n  }\n\n  doLabel (fname, label) {\n    const fData = this.state.formData;\n    return fData && fData[fname] ? label || fname : '';\n  }\n\n  doLabelClass (fname) {\n    const fData = this.state.formData;\n    return fData && fData[fname] ? 'show' : 'hide';\n  }\n\n  renderFields = (fields) => {\n    let formFields = [];\n    fields.forEach((ob) => {\n      ob.dynamicLabel = (n, l) => this.doLabel(n, l);\n      //ob.doStyle = n => this.doStyle(n);\n      ob.doLabelClass = n => this.doLabelClass(n);\n      ob.onInput = e => this.handleChange(e.target);\n      ob.onblur = e => this.handleChange(e.target);\n      if (ob.type === 'select') {\n        formFields.push(Select(ob));\n      }\n      else {\n        formFields.push(Input(ob));\n      }\n    });\n    return formFields;\n  };\n\n  renderFieldCols = () => {\n\n    const arrLength = Math.floor(this.props.fields.length / 2);\n    let left = this.props.fields.slice(0);\n    const right = left.splice(arrLength);\n\n    return [\n      <FormColumn\n        key=\"1\"\n        fields={left}\n        className='left'\n        render={this.renderFields}\n      />,\n      <FormColumn\n        key=\"2\"\n        className='right'\n        fields={right}\n        render={this.renderFields}\n      />\n      ]\n\n  };\n\n  handleChange = (t) => {\n    let newValObject = {}, val;\n    let newFormData;\n    switch(t.type) {\n      case 'number':\n        val = isNaN(t.value) ? 0 : (parseFloat(t.value) || 0);\n        break;\n      case 'checkbox':\n        val = t.checked ? 'yes' : 'no';\n        break;\n      default:\n        val = t.value || '';\n    }\n\n    newValObject[t.name] = val;\n    newFormData = Object.assign(this.state.formData, newValObject);\n    this.setState({formData: newFormData});\n    if (/^select-one$|^checkbox$|^number$/.test(t.type)) {\n      this.props.calculate(this.state.formData);\n    }\n\n  };\n\n  componentDidMount() {\n    this.setState(this.defValues());\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const projName = this.state.formData['projectName'];\n    document.getElementById('doc-title').text = projName ? projName.replace(/ /g, '-') : 'Untitled';\n  };\n\n  render() {\n\n    return <form\n      name={this.props.name}\n      id={this.props.name}\n    >\n\n        {this.props['twocols'] === 'yes' ? this.renderFieldCols() : this.renderFields(this.props.fields)}\n\n    </form>\n  }\n}\n\nexport default Form;","// eslint-disable-next-line\nimport React, { Component } from 'react';\n\nconst ListItem = (props) => {\n\n  return (\n    <li>\n      <div className=\"label\">{props.label}</div>\n      <div className=\"value\">{props.value}</div>\n    </li>\n  )\n\n};\n\nconst ResultList = (props) => {\n\n  return (\n    <ul key={props.id}>\n      {props.data.map((ob, ind) => <ListItem key={`li-${props.id}-${ind}`} label={ob.label} value={ob.value}/>)}\n    </ul>\n  )\n\n};\n\nexport default ResultList;","import sdltBands from './stampduty-bands';\n\nconst calculateStampDuty = (val, sdltType) => {\n  const onePercentOfVal = Math.round(val / 100);\n  const load = sdltType === 'commercial' ? 0 : 3;\n  const bands = sdltBands[sdltType];\n\n  let tax = 0;\n  let bandLimit;\n  let rate;\n  let previousBandLimit;\n\n  if (!sdltType) return 0;\n\n  for (let idx = 0; idx < bands.length; idx++) {\n\n    bandLimit = bands[idx].upto;\n    rate = bands[idx].rate;\n    previousBandLimit = idx > 0 ? bands[idx - 1].upto : 0;\n\n    if (bandLimit === 'end') { //end and return\n      tax += ((onePercentOfVal - (previousBandLimit / 100)) * (rate + load));\n      return tax;\n    }\n    if (val <= bandLimit) { //return before end\n      if (idx === 0) {      //below first limit\n        tax += (onePercentOfVal * (rate + load));\n      }\n      else {                //below this limit\n        tax += ((onePercentOfVal - (previousBandLimit / 100)) * (rate + load));\n      }\n      return tax;\n    }\n    else {                  //add the tax rate for the whole band and carry on\n      tax += ((bandLimit - previousBandLimit) / 100 * (rate + load));\n    }\n  }\n  // shouldn't get here but code won't know should throw error\n  console.error(`check stampduty-bands for property without upto: 'end' in last entry`);\n  return tax;\n\n};\n\nexport default calculateStampDuty;\n","\nconst freeCashLabels = [\n  \"Remortgage advance\",\n  \"Remortgage deposit\",\n  \"Remortgage fees\",\n  \"Money in\",\n  \"Money out\",\n  \"Money left in\",\n  \"Monthly rental\",\n  \"Monthly mortgage payment\",\n  \"MOE\",\n  \"Letting agent fees\",\n  \"Monthly free cashflow\"\n];\n\nconst initialFinanceLabels = [\n  \"Mortgage advance\",\n  \"Deposit\",\n  \"Stamp duty\",\n  \"Professional fees\",\n  \"Refurb/other costs\",\n  \"Total money in\",\n  \"Total cost\"\n];\n\nconst flipLabels = [\n  'Sale price',\n  'Selling costs',\n  'Total input costs',\n  'Profit (before tax)',\n  'Gain(%)'\n];\n\nconst stressLabels = [\n  'Stress test',\n  'Minimum rent'];\n\nexport default {\n  freeCashLabels: freeCashLabels,\n  initialFinanceLabels: initialFinanceLabels,\n  flipLabels: flipLabels,\n  stressLabels: stressLabels\n};","import calculateStampDuty from './stampduty/stampduty-calculator';\nimport calculationsLabels from \"../labels/calculations-labels\";\n\nconst freeCash = ( {loanToValue, buyingCash, propertyValue, doneUpValue,\n                    mortgageInterestRatePercent, monthlyRent, moePercent,\n                    agentsPercent, refurbCost, otherCost, stampDutyType,\n                    remortgageFee, remortgageValuationFee, remortgageLegalFee,\n                    initMortgageFee, initLegalFee, initSurveyorsFee, repairingLease} ) => {\n\n  const loanToVal = loanToValue / 100;\n  const remortgageAdvance = Math.round(doneUpValue * loanToVal);\n  const remortgageDeposit = Math.round(doneUpValue * (1 - loanToVal));\n  const remortgageMonthlyInterest = Math.round(remortgageAdvance * mortgageInterestRatePercent / 1200);\n  const moe = repairingLease === 'yes' ? 0 : (monthlyRent * moePercent / 100);\n  const lettingAgentsFees = monthlyRent * agentsPercent / 100;\n  const freeCashFlowMonthly = monthlyRent - (repairingLease === 'yes' ? 0 : moe) - remortgageMonthlyInterest - lettingAgentsFees;\n  const totalOtherCosts = refurbCost + otherCost;\n  const sdltTotal = calculateStampDuty(propertyValue, stampDutyType);\n  const remortgageFees = remortgageFee + remortgageValuationFee + remortgageLegalFee;\n  const initialFees = initMortgageFee + initLegalFee + initSurveyorsFee;\n  const initialCost = initialFees + totalOtherCosts + sdltTotal + propertyValue;\n  //const totFrlCost = repairingLease === 'yes' ? initialCost - totalOtherCosts : initialCost;\n  const col = (freeCashFlowMonthly >= 100) ? 'green' : 'red';\n  const labels = calculationsLabels.freeCashLabels;\n\n  return [\n    {label: labels[0], value: remortgageAdvance.toFixed(2)},\n    {label: labels[1], value: remortgageDeposit.toFixed(2)},\n    {label: labels[2], value: remortgageFees.toFixed(2)},\n    {label: labels[3], value: initialCost.toFixed(2)},\n    {label: labels[4], value: (remortgageAdvance - remortgageFees).toFixed(2)},\n    {label: labels[5], value: (initialCost - (remortgageAdvance - remortgageFees)).toFixed(2)},\n    {label: labels[6], value: monthlyRent.toFixed(2)},\n    {label: labels[7], value: remortgageMonthlyInterest.toFixed(2)},\n    {label: labels[8], value: moe.toFixed(2)},\n    {label: labels[9], value: lettingAgentsFees.toFixed(2)},\n    {label: labels[10], value: freeCashFlowMonthly.toFixed(2), colour: col}\n    ];\n};\n\nconst initialFinance = ( {buyingCash, initialLoanToValue, propertyValue, initSurveyorsFee,\n                           initLegalFee, initMortgageFee, refurbCost, otherCost, stampDutyType} ) => {\n\n  const isCash = buyingCash === 'yes';\n  const loanToVal = initialLoanToValue / 100;\n  const initMortgageAdvance = isCash ? 0 : Math.round(propertyValue * loanToVal);\n  const initFees = initSurveyorsFee + initLegalFee + initMortgageFee;\n  const other = refurbCost + otherCost;\n  const initialDeposit = isCash ? propertyValue : Math.round(propertyValue * (1 - loanToVal));\n  const sdltTotal = calculateStampDuty(propertyValue, stampDutyType);\n  const totCost = allInputCosts(initSurveyorsFee, initLegalFee, initMortgageFee,\n    refurbCost, otherCost, propertyValue, stampDutyType);\n  const totIn = totCost-initMortgageAdvance;\n  const labels = calculationsLabels.initialFinanceLabels;\n\n\n  return [\n    {label: labels[0], value: initMortgageAdvance.toFixed(2)},\n    {label: labels[1], value: initialDeposit.toFixed(2)},\n    {label: labels[2], value: sdltTotal.toFixed(2)},\n    {label: labels[3], value: initFees.toFixed(2)},\n    {label: labels[4], value: other.toFixed(2)},\n    {label: labels[5], value: totIn.toFixed(2)},\n    {label: labels[6], value: totCost.toFixed(2)}\n    ];\n};\n\nconst flip = ( {sellingLegalFee, agentSellingFee, initSurveyorsFee, initLegalFee,\n                 initMortgageFee, refurbCost, otherCost, propertyValue, stampDutyType, doneUpValue} ) => {\n\n  const totCost = allInputCosts(initSurveyorsFee, initLegalFee, initMortgageFee,\n    refurbCost, otherCost, propertyValue, stampDutyType);\n\n  const fees = sellingLegalFee + agentSellingFee;\n  const flipGain = Math.round((doneUpValue-totCost)/totCost*10000)/100;\n  const col = (flipGain >= 20) ? 'green' : 'red';\n  const labels = calculationsLabels.flipLabels;\n\n  return [\n    {label: labels[0], value: doneUpValue.toFixed(2)},\n    {label: labels[1], value: fees.toFixed(2)},\n    {label: labels[2], value: totCost.toFixed(2) || '0'},\n    {label: labels[3], value:  ((doneUpValue - (totCost + fees)).toFixed(2) || '0'), col},\n    {label: labels[4], value: flipGain.toFixed(2) || 0, col}\n  ];\n};\n\nconst stressTest = ( {doneUpValue, monthlyRent, loanToValue,\n                       mortgageStressInterestRatePercent, mortgageStressMultipePercent} ) => {\n\n  const minRent = Math.ceil(\n    doneUpValue *\n    loanToValue / 100 *\n    mortgageStressInterestRatePercent / 1200 *\n    mortgageStressMultipePercent / 100\n  );\n  const pass = monthlyRent >= minRent;\n  const labels = calculationsLabels.stressLabels;\n\n  return [\n    {label: labels[0], value: pass ? 'pass' : 'fail'},\n    {label: labels[1], value: minRent.toFixed(2)}\n  ];\n};\n\nconst allInputCosts = (initSurveyorsFee, initLegalFee, initMortgageFee,\n                         refurbCost, otherCost, propertyValue, stampDutyType) => {\n\n  const stampDuty = calculateStampDuty(propertyValue, stampDutyType);\n\n  return (\n    initSurveyorsFee +\n    initLegalFee +\n    initMortgageFee +\n    refurbCost +\n    otherCost +\n    stampDuty\n    + propertyValue\n  );\n};\n\nconst calculations = {\n  freeCash: freeCash,\n  initialFinance: initialFinance,\n  flip: flip,\n  allInputCosts: allInputCosts,\n  stressTest: stressTest\n};\n\nexport default calculations;","import React, { Component } from 'react';\nimport Form from './components/FormComponent';\nimport fields from './components/formconfig';\nimport './css/app.css';\nimport ResultList from './components/ResultListComponent';\nimport calculations from './logic/calculations';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        dealFinance: [],\n        buyToLet: [],\n        stress: [],\n        flip: []\n      }\n    };\n  }\n\n  calculate = (inputData) => {\n    console.log(inputData);\n    const dfResult = calculations.initialFinance(inputData);\n    const btlResult = calculations.freeCash(inputData);\n    const flip = calculations.flip(inputData);\n    const stress = calculations.stressTest(inputData);\n    //this.setState({});\n    this.setState({\n      data: {\n        dealFinance: dfResult,\n        buyToLet: btlResult,\n        stress: stress,\n        flip: flip\n      }\n    });\n  };\n\n  doResults = () => {\n    return (\n      <React.Fragment>\n        <div className=\"res-block\">\n          <h4>Deal finance</h4>\n          <ResultList id=\"1\" data={this.state.data.dealFinance}/>\n        </div>\n        <div className=\"res-block\">\n          <h4>Buy to let</h4>\n          <ResultList id=\"2\" data={this.state.data.buyToLet}/>\n        </div>\n        <div className=\"res-block\">\n          <h4>Stress test</h4>\n          <ResultList id=\"3\" data={this.state.data.stress}/>\n        </div>\n        <div className=\"res-block\">\n          <h4>Flip</h4>\n          <ResultList id=\"4\" data={this.state.data.flip}/>\n        </div>\n      </React.Fragment>\n    )\n  };\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n          <div className=\"column\">\n            <Form\n              name={'propcalc'}\n              fields={fields}\n              twocols=\"yes\"\n              calculate={this.calculate}\n            />\n          </div>\n          <div className=\"column results\">\n            {this.doResults()}\n          </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './css/bootstrap-override.scss';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}